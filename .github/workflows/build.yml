name: Build OnlyOffice Server and Builder Packages

on: workflow_dispatch

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Get version from Dockerfile
      run: |
        PRODUCT_VERSION=$(cat Dockerfile | grep PRODUCT_VERSION | sed -e 's|[^=]*=\(\S*\).*|\1|')
        BUILD_NUMBER=$(cat Dockerfile | grep BUILD_NUMBER | sed -e 's|[^=]*=*||')
        echo "PRODUCT_VERSION=$PRODUCT_VERSION" >> $GITHUB_ENV
        echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
        echo "TARGET_VER=${PRODUCT_VERSION}-${BUILD_NUMBER}" >> $GITHUB_ENV
    - name: Build the Builder Docker image
      run: docker build . --file Dockerfile --tag onlyoffice-builder
    - name: Build Only Office
      run: docker run --rm -v $PWD:/build/out/ --env PRODUCT_VERSION=${{ env.PRODUCT_VERSION }} --env BUILD_NUMBER=${{ env.BUILD_NUMBER }} onlyoffice-builder build.sh
    - name: Get package Names
      run: |
        echo "SERVER_RPM_PKG=$(ls onlyoffice-documentserver*.rpm)" >> $GITHUB_ENV
        echo "SERVER_DEB_PKG=$(ls onlyoffice-documentserver*.deb)" >> $GITHUB_ENV      
        echo "BUILDER_RPM_PKG=$(ls onlyoffice-documentbuilder*.rpm)" >> $GITHUB_ENV
        echo "BUILDER_DEB_PKG=$(ls onlyoffice-documentbuilder*.deb)" >> $GITHUB_ENV            
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TARGET_VER }}
        release_name: ${{ env.TARGET_VER }}
        draft: true
        prerelease: false
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.SERVER_RPM_PKG }}
        asset_name: ${{ env.SERVER_RPM_PKG }}
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.SERVER_DEB_PKG }}
        asset_name: ${{ env.SERVER_DEB_PKG }}
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.BUILDER_RPM_PKG }}
        asset_name: ${{ env.BUILDER_RPM_PKG }}
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.BUILDER_DEB_PKG }}
        asset_name: ${{ env.BUILDER_DEB_PKG }}
        asset_content_type: application/octet-stream
    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
